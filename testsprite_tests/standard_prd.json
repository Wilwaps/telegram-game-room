{
  "meta": {
    "project": "Sala de Juegos - Telegram MiniApp",
    "date": "2025-10-04",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "Sala de Juegos es una MiniApp para Telegram que permite a los usuarios jugar juegos multijugador en tiempo real, actualmente con Tic Tac Toe implementado y Bingo en desarrollo, integrando un sistema de economía interna llamado \"Fuegos\" que se utiliza para acceder y canjear artículos dentro de la plataforma.",
  "core_goals": [
    "Proveer una experiencia de juego multijugador en tiempo real altamente reactiva y sincronizada.",
    "Implementar un sistema de economía basado en la moneda virtual \"Fuegos\" para incentivar la participación y permitir la compra de artículos.",
    "Ofrecer un sistema de gestión de salas públicas y privadas con control de invitaciones y transferencia de host.",
    "Garantizar una experiencia de usuario integrada y fluida con la plataforma de Telegram usando el WebApp SDK.",
    "Diseñar una arquitectura escalable, modular y segura, capaz de soportar múltiples juegos y crecimiento futuro."
  ],
  "key_features": [
    "Juego en tiempo real con Socket.io para Tic Tac Toe y arquitectura preparada para agregar más juegos como Bingo.",
    "Sistema de economía \"Fuegos\" que gestiona suministro, patrocinios, transferencias y canje de artículos con APIs REST y SSE para actualizaciones en tiempo real.",
    "Gestión completa de salas: creación, unión, invitaciones, transferencia de host y sistema de revancha.",
    "Interfaz moderna y responsive adaptada al tema de Telegram, con animaciones y soporte para feedback háptico.",
    "Integración con Telegram Bot para interacción directa, incluyendo configuración de comandos y botones de menú.",
    "Backend robusto usando Node.js, Express, Redis y servicios dedicados para manejo de lógica del juego, sesiones, economía y notificaciones.",
    "Seguridad implementada con validaciones, rate limiting, Helmet, y manejo robusto de errores y timeouts."
  ],
  "user_flow_summary": [
    "El usuario abre el bot de Telegram y accede a la MiniApp desde el botón de menú o comando.",
    "Puede crear una sala pública o privada o unirse a una sala existente mediante código.",
    "En la sala, el usuario invita amigos mediante código o enlace de Telegram para iniciar la partida.",
    "Durante el juego, la plataforma sincroniza movimientos en tiempo real usando Socket.io, mostrando animaciones y estados.",
    "Tras terminar la partida, el usuario ve estadísticas, puede solicitar revancha o salir de la sala.",
    "La economía \"Fuegos\" se actualiza en vivo; los usuarios pueden transferir fuegos, canjear artículos del catálogo y ver su historial mediante llamadas API y eventos SSE."
  ],
  "validation_criteria": [
    "Pruebas integrales de la comunicación en tiempo real garantizando la sincronización y manejo correcto de partidas.",
    "Verificación del correcto funcionamiento del sistema de economía con operaciones de suministro, transferencia, patrocinio y canje de artículos.",
    "Validación de la seguridad, incluyendo rate limiting, sanitización de datos, y manejo adecuado de permisos y roles.",
    "Pruebas UX para asegurar la responsividad, usabilidad, integración con Telegram WebApp SDK y feedback visual/háptico.",
    "Test de escalabilidad verificando la correcta gestión de salas múltiples, conexión con Redis y soporte para múltiples instancias.",
    "Monitoreo de logs y performance para asegurar estabilidad bajo carga y facilitar troubleshooting."
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript (Node.js 16+)",
      "Express 4",
      "Socket.io 4",
      "Redis (ioredis)",
      "Winston",
      "Telegram Bot API"
    ],
    "features": [
      {
        "name": "Economy API",
        "description": "Economía: supply, patrocinadores, transferencias, historial y SSE.",
        "files": [
          "backend/routes/economy.js",
          "backend/middleware/adminAuth.js",
          "backend/services/redisService.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Economy API",
            "version": "1.0.0"
          },
          "servers": [
            {
              "url": "http://localhost:3000"
            }
          ],
          "paths": {
            "/api/economy/supply": {
              "get": {
                "summary": "Get supply summary",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/supply/txs": {
              "get": {
                "summary": "List supply txs",
                "parameters": [
                  {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/supply/stream": {
              "get": {
                "summary": "Supply SSE stream",
                "responses": {
                  "200": {
                    "description": "SSE stream"
                  }
                }
              }
            },
            "/api/economy/users": {
              "get": {
                "summary": "List users with fires",
                "parameters": [
                  {
                    "name": "cursor",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  },
                  {
                    "name": "search",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/history/{userId}": {
              "get": {
                "summary": "User fires history",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  },
                  {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  },
                  {
                    "name": "offset",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/sponsors": {
              "get": {
                "summary": "List sponsors",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/sponsors/add": {
              "post": {
                "summary": "Add sponsor (admin)",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "initialAmount": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/sponsors/remove": {
              "post": {
                "summary": "Remove sponsor (admin)",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/sponsors/set-meta": {
              "post": {
                "summary": "Set sponsor meta (admin)",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/sponsors/set-key": {
              "post": {
                "summary": "Set sponsor key (admin)",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId",
                          "key"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/sponsors/remove-key": {
              "post": {
                "summary": "Remove sponsor key (admin)",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/transfer": {
              "post": {
                "summary": "Transfer fires (sponsor)",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "fromUserId": {
                            "type": "string"
                          },
                          "toUserId": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "integer"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "sponsorKey": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "fromUserId",
                          "toUserId",
                          "amount"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/economy/grant-from-supply": {
              "post": {
                "summary": "Grant fires from reserve (admin)",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "toUserId": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "integer"
                          },
                          "reason": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "toUserId",
                          "amount"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "XP API",
        "description": "Gestión de umbrales de XP.",
        "files": [
          "backend/routes/xp.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "XP API",
            "version": "1.0.0"
          },
          "servers": [
            {
              "url": "http://localhost:3000"
            }
          ],
          "paths": {
            "/api/xp/config": {
              "get": {
                "summary": "Get XP thresholds",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              },
              "post": {
                "summary": "Set XP thresholds",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "thresholds": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Profile API",
        "description": "Perfil de usuario: lectura/actualización y solicitud de cambio de clave.",
        "files": [
          "backend/routes/profile.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Profile API",
            "version": "1.0.0"
          },
          "servers": [
            {
              "url": "http://localhost:3000"
            }
          ],
          "paths": {
            "/api/profile/{userId}": {
              "get": {
                "summary": "Get profile",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              },
              "post": {
                "summary": "Update profile",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "firstName": {
                            "type": "string"
                          },
                          "lastName": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/profile/{userId}/request-key-change": {
              "post": {
                "summary": "Request key change",
                "parameters": [
                  {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "string"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "newKey": {
                            "type": "string"
                          },
                          "note": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Store API",
        "description": "Catálogo y canje de artículos usando fuegos.",
        "files": [
          "backend/routes/store.js",
          "backend/services/redisService.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Store API",
            "version": "1.0.0"
          },
          "servers": [
            {
              "url": "http://localhost:3000"
            }
          ],
          "paths": {
            "/api/store/catalog": {
              "get": {
                "summary": "Get catalog",
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            },
            "/api/store/redeem": {
              "post": {
                "summary": "Redeem item",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "itemId": {
                            "type": "string"
                          },
                          "requestId": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "userId",
                          "itemId"
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "OK"
                  }
                }
              }
            }
          }
        }
      }
    ]
  }
}
